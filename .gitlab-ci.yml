variables:
  AWS_ROOT: "aws"
  BUILD_IMAGE: node:lts-alpine

stages:
  - assume-role
  - build
  - aws-cdk-diff
  - aws-cdk-deploy

# GENERAL

.setup:
  script:
    - node --version  # Print out nodejs version for debugging
    - apk add --no-cache aws-cli  # install aws-cli
    - npm install -g aws-cdk  # install aws-cdk
    - echo "Compiling the code..."
    - npm install  # install project dependencies
    - echo "Compile complete."

.assume_role:
  script:
    - echo ${ID_TOKEN}
    - >
      export $(printf "AWS_ACCESS_KEY_ID=%s AWS_SECRET_ACCESS_KEY=%s AWS_SESSION_TOKEN=%s"
      $(aws sts assume-role-with-web-identity
      --role-arn ${ROLE_ARN}
      --role-session-name "GitLabRunner-${CI_PROJECT_ID}-${CI_PIPELINE_ID}"
      --web-identity-token ${ID_TOKEN}
      --duration-seconds 3600
      --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]'
      --output text))
    - aws sts get-caller-identity

# WEBSITE 

build website:
  stage: build
  image: node:latest
  script:
    - cd website/dripdrop  # Navigate to the directory where package.json is
    - npm install
    - npm run build
  artifacts:
    paths:
      - website/dripdrop/build/ 
    when: always
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      changes:
        - website/dripdrop/**/*


aws-cdk-diff:
  image: $BUILD_IMAGE
  stage: aws-cdk-diff
  id_tokens:
    ID_TOKEN:
      aud: sdmay25-25-s3-deploy
  before_script:
    - cd ${AWS_ROOT} 
  script:
    - !reference [.setup, script]
    - !reference [.assume_role, script]
    - cdk diff WebsiteHostingStack --exclusively true
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      changes:
        - website/dripdrop/**/*


aws-cdk-deploy:
  image: $BUILD_IMAGE
  stage: aws-cdk-deploy
  dependencies:
    - build website
  id_tokens:
    ID_TOKEN:
      aud: sdmay25-25-s3-deploy
  before_script:
    - cd ${AWS_ROOT} 
  script:
    - !reference [.setup, script]
    - !reference [.assume_role, script]
    - npm run build
    - cdk deploy WebsiteHostingStack --require-approval never
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      changes:
        - website/dripdrop/**/*


# API 

build layer:
  stage: build
  image: python:3.11
  script:
    - cd ${AWS_ROOT}/lib/layer  # Navigate to the directory where package.json is
    - pip install -r requirements.txt -t ./python
    - cp *.py ./python
  artifacts:
    paths:
      - ${AWS_ROOT}/lib/layer/python
    when: always
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      changes:
        - aws/*

aws-cdk-diff-api:
  image: $BUILD_IMAGE
  stage: aws-cdk-diff
  dependencies:
    - build layer
  id_tokens:
    ID_TOKEN:
      aud: sdmay25-25-s3-deploy
  before_script:
    - cd ${AWS_ROOT} 
  script:
    - !reference [.setup, script]
    - !reference [.assume_role, script]
    - cdk diff ApiStack --exclusively true
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      changes:
        - aws/*


aws-cdk-deploy-api:
  image: $BUILD_IMAGE
  stage: aws-cdk-deploy
  dependencies:
    - build layer
  id_tokens:
    ID_TOKEN:
      aud: sdmay25-25-s3-deploy
  before_script:
    - cd ${AWS_ROOT} 
  script:
    - !reference [.setup, script]
    - !reference [.assume_role, script]
    - npm run build
    - cdk deploy ApiStack --require-approval never
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      changes:
        - aws/**/*

