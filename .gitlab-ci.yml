stages:
  - build-website
  - deploy-website

.assume_role:
  id_tokens:
    GITLAB_OIDC_TOKEN:
      aud: sdmay25-25-s3-deploy
  script:
    - >
      export $(printf "AWS_ACCESS_KEY_ID=%s AWS_SECRET_ACCESS_KEY=%s AWS_SESSION_TOKEN=%s"
      $(aws sts assume-role-with-web-identity
      --role-arn ${arn:aws:iam::626635444817:role/gitlab_sdmay25_25_cdk}
      --role-session-name "GitLabRunner-${CI_PROJECT_ID}-${CI_PIPELINE_ID}"
      --web-identity-token ${GITLAB_OIDC_TOKEN}
      --duration-seconds 3600
      --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]'
      --output text))
    - export AWS_ACCESS_KEY_ID="${STS[0]}"
    - export AWS_SECRET_ACCESS_KEY="${STS[1]}"
    - export AWS_SESSION_TOKEN="${STS[2]}"

build website:
  stage: build-website
  image: node:latest
  script:
    - cd website/dripdrop  # Navigate to the directory where package.json is
    - npm install
    - npm run build
  artifacts:
    paths:
      - website/dripdrop/build/ 
    when: always
  # rules:
  #   - if: '$CI_COMMIT_REF_NAME == "master"'
  #     changes:
  #       - website/dripdrop/**/*

deploy website:
  stage: deploy-website
  image: node:latest
  extends: .assume_role
  before_script:
    - npm install -g aws-cdk@latest
    - cdk --version
  script:
    - cd aws/ 
    - echo "Compiling the code..."
    - npm install
    - npm run build
    - echo "Compile complete."
    - npx cdk synth
    - cdk diff
    - cdk deploy WebsiteHostingStack --require-approval never
  # rules:
  #   - if: '$CI_COMMIT_REF_NAME == "master"'
  #     changes:
  #       - website/dripdrop/**/*



